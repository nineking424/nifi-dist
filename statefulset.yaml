apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
  namespace: nifi
  labels:
    app: nifi
spec:
  serviceName: nifi-headless
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      initContainers:
      - name: copy-test-page
        image: busybox:1.36
        command: 
        - sh
        - -c
        - |
          echo "Copying test page to NiFi custom-docs directory..."
          mkdir -p /opt/nifi-docs/
          cp /tmp/test-page/nifi-api-test.html /opt/nifi-docs/
          echo "Test page copied successfully"
        volumeMounts:
        - name: test-page
          mountPath: /tmp/test-page
        - name: nifi-docs
          mountPath: /opt/nifi-docs
      containers:
      - name: nifi
        image: apache/nifi:1.28.1
        ports:
        - containerPort: 8080
          name: web
        - containerPort: 8443
          name: web-secure
        - containerPort: 10000
          name: site-to-site
        - containerPort: 6007
          name: load-balance
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                # NiFi가 시작된 후 테스트 페이지 복사
                sleep 30
                if [ -f /opt/nifi/nifi-current/custom-docs/nifi-api-test.html ]; then
                  echo "Copying test page to NiFi web root..."
                  cp /opt/nifi/nifi-current/custom-docs/nifi-api-test.html /opt/nifi/nifi-current/lib/
                  echo "Test page copied successfully"
                fi
        env:
        - name: NIFI_WEB_HTTP_PORT
          value: "8080"
        - name: NIFI_WEB_HTTP_HOST
          value: "0.0.0.0"
        - name: SINGLE_USER_CREDENTIALS_USERNAME
          value: "admin"
        - name: SINGLE_USER_CREDENTIALS_PASSWORD
          value: "ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB"
        - name: NIFI_WEB_PROXY_HOST
          value: "nifi.nks.stjeong.com"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: nifi-docs
          mountPath: /opt/nifi/nifi-current/custom-docs
        - name: nifi-data
          mountPath: /opt/nifi/nifi-current/data
        - name: nifi-logs
          mountPath: /opt/nifi/nifi-current/logs
        - name: nifi-flowfile-repo
          mountPath: /opt/nifi/nifi-current/flowfile_repository
        - name: nifi-content-repo
          mountPath: /opt/nifi/nifi-current/content_repository
        - name: nifi-provenance-repo
          mountPath: /opt/nifi/nifi-current/provenance_repository
        livenessProbe:
          httpGet:
            path: /nifi/
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /nifi/
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
      volumes:
      - name: test-page
        configMap:
          name: nifi-test-page
      - name: nifi-docs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: nifi-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: nifi-logs
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: nifi-flowfile-repo
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: nifi-content-repo
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
  - metadata:
      name: nifi-provenance-repo
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi